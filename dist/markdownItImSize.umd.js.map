{"version":3,"file":"markdownItImSize.umd.js","sources":["../lib/helpers/parse_image_size.js","../lib/index.js"],"sourcesContent":["// Parse image size\n//\n\nfunction parseNextNumber(str, pos, max) {\n  let code,\n      start = pos,\n      result = {\n        ok: false,\n        pos: pos,\n        value: ''\n      };\n\n  code = str.charCodeAt(pos);\n\n  while (pos < max && (code >= 0x30 /* 0 */ && code <= 0x39 /* 9 */) || code === 0x25 /* % */) {\n    code = str.charCodeAt(++pos);\n  }\n\n  result.ok = true;\n  result.pos = pos;\n  result.value = str.slice(start, pos);\n\n  return result;\n}\n\nexport default function parseImageSize(str, pos, max) {\n  let code,\n      result = {\n        ok: false,\n        pos: 0,\n        width: '',\n        height: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  code = str.charCodeAt(pos);\n\n  if (code !== 0x3d /* = */) { return result; }\n\n  pos++;\n\n  // size must follow = without any white spaces as follows\n  // (1) =300x200\n  // (2) =300x\n  // (3) =x200\n  // (4) =200\n  // (5) =50%\n  // (6) =fill\n\n  code = str.charCodeAt(pos);\n\n  if (str.slice(pos, max).indexOf('fill') === 0) {\n    result.width = '100%';\n    result.height = '100%';\n    result.pos = pos + 'fill'.length;\n    result.ok = true;\n    return result;\n  }\n\n  if (code !== 0x78 /* x */ && (code < 0x30 || code  > 0x39) /* [0-9] */) {\n    return result;\n  }\n\n  // parse width\n  let resultW = parseNextNumber(str, pos, max);\n  pos = resultW.pos;\n\n  // next character must be 'x' or it terminates in favor of a single dimension expression e.g. (4).\n  code = str.charCodeAt(pos);\n  if (code !== 0x78 /* x */ && resultW.value) {\n    result.width = resultW.value;\n    result.pos = pos;\n    result.ok = true;\n    return result;\n  }\n  if (code !== 0x78 /* x */) { return result; }\n\n  pos++;\n\n  // parse height\n  let resultH = parseNextNumber(str, pos, max);\n  pos = resultH.pos;\n\n  result.width = resultW.value;\n  result.height = resultH.value;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n}\n","// Process ![test]( x =100x200)\n//                    ^^^^^^^^ this size specification\n\nimport parseImageSize from './helpers/parse_image_size.js';\n\nfunction image_with_size(md, options) {\n  return function (state, silent) {\n    let attrs,\n        code,\n        label,\n        labelEnd,\n        labelStart,\n        pos,\n        ref,\n        res,\n        title,\n        width = '',\n        height = '',\n        token,\n        tokens,\n        start,\n        href = '',\n        oldPos = state.pos,\n        max = state.posMax,\n        endPos = state.pos;\n\n    if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n    if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n    labelStart = state.pos + 2;\n    labelEnd = md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n    // parser failed to find ']', so it's not a valid link\n    if (labelEnd < 0) { return false; }\n\n    if (state.pending) {\n      state.pushPending();\n    }\n\n    pos = labelEnd + 1;\n    if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n\n      //\n      // Inline link\n      //\n\n      // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n      pos++;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n      if (pos >= max) { return false; }\n\n      // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n      start = pos;\n      res = md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (code !== 0x20 && code !== 0x0A) { break; }\n        }\n      } else {\n        title = '';\n      }\n\n      // [link](  <href>  \"title\" =WxH  )\n      //                          ^^^^ parsing image size\n      if (pos - 1 >= 0) {\n        code = state.src.charCodeAt(pos - 1);\n\n        // there must be at least one white spaces\n        // between previous field and the size\n        if (code === 0x20) {\n          res = parseImageSize(state.src, pos, state.posMax);\n          if (res.ok) {\n            width = res.width;\n            height = res.height;\n            pos = res.pos;\n          }\n          // [link](  <href>  \"title\" =WxH  )\n          //                              ^^ skipping these spaces\n          for (; pos < max; pos++) {\n            code = state.src.charCodeAt(pos);\n            if (code !== 0x20 && code !== 0x0A) { break; }\n          }\n        }\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n        state.pos = oldPos;\n        return false;\n      }\n      endPos = pos;\n      pos++;\n\n    } else {\n      //\n      // Link reference\n      //\n      if (typeof state.env.references === 'undefined') { return false; }\n\n      // [foo]  [bar]\n      //      ^^ optional whitespace (can include newlines)\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n\n      if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n        start = pos + 1;\n        pos = md.helpers.parseLinkLabel(state, pos);\n        if (pos >= 0) {\n          endPos = pos;\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n          endPos = labelEnd;\n        }\n      } else {\n        pos = labelEnd + 1;\n        endPos = labelEnd;\n      }\n\n      // covers label === '' and label === undefined\n      // (collapsed reference link and shortcut reference link respectively)\n      if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n      ref = state.env.references[md.utils.normalizeReference(label)];\n      if (!ref) {\n        state.pos = oldPos;\n        return false;\n      }\n      href = ref.href;\n      title = ref.title;\n    }\n\n    //\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      state.pos = labelStart;\n      state.posMax = labelEnd;\n\n      let newState = new state.md.inline.State(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens = []\n      );\n      newState.md.inline.tokenize(newState);\n\n      token          = state.push('image', 'img', 0);\n      token.attrs    = attrs = [ [ 'src', href ],\n        [ 'alt', '' ] ];\n      token.children = tokens;\n\n      token.position = oldPos;\n      token.size = endPos - oldPos + 1;\n\n      if (title) {\n        attrs.push([ 'title', title ]);\n      }\n\n      if (width !== '') {\n        attrs.push([ 'width', width ]);\n      }\n\n      if (height !== '') {\n        attrs.push([ 'height', height ]);\n      }\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  };\n}\n\nmodule.exports = function imsize_plugin(md, options) {\n  md.inline.ruler.before('emphasis', 'image', image_with_size(md, options));\n};\n"],"names":["parseNextNumber","str","pos","max","code","start","result","ok","value","charCodeAt","slice","parseImageSize","width","height","indexOf","length","resultW","resultH","image_with_size","md","options","state","silent","attrs","label","labelEnd","labelStart","ref","res","title","token","tokens","href","oldPos","posMax","endPos","src","helpers","parseLinkLabel","pending","pushPending","parseLinkDestination","normalizeLink","validateLink","parseLinkTitle","env","references","utils","normalizeReference","newState","inline","State","tokenize","push","children","position","size","module","exports","imsize_plugin","ruler","before"],"mappings":"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"}