{"version":3,"file":"markdownItImSize.mjs","sources":["../lib/helpers/parse_image_size.js","../lib/index.js"],"sourcesContent":["// Parse image size\n//\n\nfunction parseNextNumber(str, pos, max) {\n  let code,\n      start = pos,\n      result = {\n        ok: false,\n        pos: pos,\n        value: ''\n      };\n\n  code = str.charCodeAt(pos);\n\n  while (pos < max && (code >= 0x30 /* 0 */ && code <= 0x39 /* 9 */) || code === 0x25 /* % */) {\n    code = str.charCodeAt(++pos);\n  }\n\n  result.ok = true;\n  result.pos = pos;\n  result.value = str.slice(start, pos);\n\n  return result;\n}\n\nexport default function parseImageSize(str, pos, max) {\n  let code,\n      result = {\n        ok: false,\n        pos: 0,\n        width: '',\n        height: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  code = str.charCodeAt(pos);\n\n  if (code !== 0x3d /* = */) { return result; }\n\n  pos++;\n\n  // size must follow = without any white spaces as follows\n  // (1) =300x200\n  // (2) =300x\n  // (3) =x200\n  // (4) =200\n  // (5) =50%\n  // (6) =fill\n\n  code = str.charCodeAt(pos);\n\n  if (str.slice(pos, max).indexOf('fill') === 0) {\n    result.width = '100%';\n    result.height = '100%';\n    result.pos = pos + 'fill'.length;\n    result.ok = true;\n    return result;\n  }\n\n  if (code !== 0x78 /* x */ && (code < 0x30 || code  > 0x39) /* [0-9] */) {\n    return result;\n  }\n\n  // parse width\n  let resultW = parseNextNumber(str, pos, max);\n  pos = resultW.pos;\n\n  // next character must be 'x' or it terminates in favor of a single dimension expression e.g. (4).\n  code = str.charCodeAt(pos);\n  if (code !== 0x78 /* x */ && resultW.value) {\n    result.width = resultW.value;\n    result.pos = pos;\n    result.ok = true;\n    return result;\n  }\n  if (code !== 0x78 /* x */) { return result; }\n\n  pos++;\n\n  // parse height\n  let resultH = parseNextNumber(str, pos, max);\n  pos = resultH.pos;\n\n  result.width = resultW.value;\n  result.height = resultH.value;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n}\n","// Process ![test]( x =100x200)\n//                    ^^^^^^^^ this size specification\n\nimport parseImageSize from './helpers/parse_image_size.js';\n\nfunction image_with_size(md, options) {\n  return function (state, silent) {\n    let attrs,\n        code,\n        label,\n        labelEnd,\n        labelStart,\n        pos,\n        ref,\n        res,\n        title,\n        width = '',\n        height = '',\n        token,\n        tokens,\n        start,\n        href = '',\n        oldPos = state.pos,\n        max = state.posMax,\n        endPos = state.pos;\n\n    if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n    if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n    labelStart = state.pos + 2;\n    labelEnd = md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n    // parser failed to find ']', so it's not a valid link\n    if (labelEnd < 0) { return false; }\n\n    if (state.pending) {\n      state.pushPending();\n    }\n\n    pos = labelEnd + 1;\n    if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n\n      //\n      // Inline link\n      //\n\n      // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n      pos++;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n      if (pos >= max) { return false; }\n\n      // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n      start = pos;\n      res = md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (code !== 0x20 && code !== 0x0A) { break; }\n        }\n      } else {\n        title = '';\n      }\n\n      // [link](  <href>  \"title\" =WxH  )\n      //                          ^^^^ parsing image size\n      if (pos - 1 >= 0) {\n        code = state.src.charCodeAt(pos - 1);\n\n        // there must be at least one white spaces\n        // between previous field and the size\n        if (code === 0x20) {\n          res = parseImageSize(state.src, pos, state.posMax);\n          if (res.ok) {\n            width = res.width;\n            height = res.height;\n            pos = res.pos;\n          }\n          // [link](  <href>  \"title\" =WxH  )\n          //                              ^^ skipping these spaces\n          for (; pos < max; pos++) {\n            code = state.src.charCodeAt(pos);\n            if (code !== 0x20 && code !== 0x0A) { break; }\n          }\n        }\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n        state.pos = oldPos;\n        return false;\n      }\n      endPos = pos;\n      pos++;\n\n    } else {\n      //\n      // Link reference\n      //\n      if (typeof state.env.references === 'undefined') { return false; }\n\n      // [foo]  [bar]\n      //      ^^ optional whitespace (can include newlines)\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n\n      if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n        start = pos + 1;\n        pos = md.helpers.parseLinkLabel(state, pos);\n        if (pos >= 0) {\n          endPos = pos;\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n          endPos = labelEnd;\n        }\n      } else {\n        pos = labelEnd + 1;\n        endPos = labelEnd;\n      }\n\n      // covers label === '' and label === undefined\n      // (collapsed reference link and shortcut reference link respectively)\n      if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n      ref = state.env.references[md.utils.normalizeReference(label)];\n      if (!ref) {\n        state.pos = oldPos;\n        return false;\n      }\n      href = ref.href;\n      title = ref.title;\n    }\n\n    //\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      state.pos = labelStart;\n      state.posMax = labelEnd;\n\n      let newState = new state.md.inline.State(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens = []\n      );\n      newState.md.inline.tokenize(newState);\n\n      token          = state.push('image', 'img', 0);\n      token.attrs    = attrs = [ [ 'src', href ],\n        [ 'alt', '' ] ];\n      token.children = tokens;\n\n      token.position = oldPos;\n      token.size = endPos - oldPos + 1;\n\n      if (title) {\n        attrs.push([ 'title', title ]);\n      }\n\n      if (width !== '') {\n        attrs.push([ 'width', width ]);\n      }\n\n      if (height !== '') {\n        attrs.push([ 'height', height ]);\n      }\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  };\n}\n\nmodule.exports = function imsize_plugin(md, options) {\n  md.inline.ruler.before('emphasis', 'image', image_with_size(md, options));\n};\n"],"names":["parseNextNumber","str","pos","max","code","start","result","ok","value","charCodeAt","slice","parseImageSize","width","height","indexOf","length","resultW","resultH","image_with_size","md","options","state","silent","attrs","label","labelEnd","labelStart","ref","res","title","token","tokens","href","oldPos","posMax","endPos","src","helpers","parseLinkLabel","pending","pushPending","parseLinkDestination","normalizeLink","validateLink","parseLinkTitle","env","references","utils","normalizeReference","newState","inline","State","tokenize","push","children","position","size","module","exports","imsize_plugin","ruler","before"],"mappings":"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"}